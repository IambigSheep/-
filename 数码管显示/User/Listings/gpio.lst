C51 COMPILER V9.56.0.0   GPIO                                                              05/13/2022 23:20:03 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\Objects\gpio.obj
COMPILER INVOKED BY: D:\Keil_C51\C51\BIN\C51.EXE ..\Sys\gpio.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver;..\Sys) D
                    -EBUG OBJECTEXTEND PRINT(.\Listings\gpio.lst) OBJECT(.\Objects\gpio.obj)

line level    source

   1          #include "gpio.h"
   2          
   3          void PWM_GPIO_Init(void)                        //ÌØÊâ¶Ë¿ÚÅäÖÃ
   4          {
   5   1              GPIO_InitTypeDef GPIO_InitTypeStrcture;
   6   1              
   7   1              GPIO_InitTypeStrcture.Mode = GPIO_OUT_PP;
   8   1              GPIO_InitTypeStrcture.Pin  = GPIO_Pin_6 | GPIO_Pin_7;
   9   1              GPIO_Config(GPIO_P0,&GPIO_InitTypeStrcture);
  10   1              
  11   1              GPIO_InitTypeStrcture.Mode = GPIO_OUT_PP;
  12   1              GPIO_InitTypeStrcture.Pin = 0;
  13   1              GPIO_InitTypeStrcture.Pin = GPIO_Pin_6 | GPIO_Pin_7;
  14   1              GPIO_Config(GPIO_P1,&GPIO_InitTypeStrcture);
  15   1              
  16   1              GPIO_InitTypeStrcture.Mode = GPIO_OUT_PP;
  17   1              GPIO_InitTypeStrcture.Pin = 0;
  18   1              GPIO_InitTypeStrcture.Pin = GPIO_Pin_1 | GPIO_Pin_2 | GPIO_Pin_3 | GPIO_Pin_7;
  19   1              GPIO_Config(GPIO_P2,&GPIO_InitTypeStrcture);
  20   1              
  21   1              GPIO_InitTypeStrcture.Mode = GPIO_OUT_PP;
  22   1              GPIO_InitTypeStrcture.Pin = 0;
  23   1              GPIO_InitTypeStrcture.Pin = GPIO_Pin_7;
  24   1              GPIO_Config(GPIO_P3,&GPIO_InitTypeStrcture);
  25   1              
  26   1              GPIO_InitTypeStrcture.Mode = GPIO_OUT_PP;
  27   1              GPIO_InitTypeStrcture.Pin = 0;
  28   1              GPIO_InitTypeStrcture.Pin = GPIO_Pin_5 | GPIO_Pin_4 | GPIO_Pin_2;
  29   1              GPIO_Config(GPIO_P4,&GPIO_InitTypeStrcture);
  30   1      }
  31          
  32          unsigned char GPIO_Config(unsigned char GPIO,GPIO_InitTypeDef *GPIOx)           //GPIO¶Ë¿ÚÅäÖÃ
  33          {
  34   1              if(GPIO >GPIO_P7) return 1;
  35   1              if(GPIOx->Mode >GPIO_OUT_PP) return 2;
  36   1              if(GPIO == GPIO_P0)
  37   1              {
  38   2                      if(GPIOx->Mode == GPIO_PullUp)  P0M1 &= ~(GPIOx->Pin) ,  P0M0 &= ~(GPIOx->Pin);
  39   2                      if(GPIOx->Mode == GPIO_HighZ)   P0M1 |= GPIOx->Pin        ,  P0M0 &= ~(GPIOx->Pin);
  40   2                      if(GPIOx->Mode == GPIO_OUT_OD)  P0M1 |= GPIOx->Pin        ,  P0M0 |= GPIOx->Pin;
  41   2                      if(GPIOx->Mode == GPIO_OUT_PP)  P0M1 &= ~(GPIOx->Pin) ,  P0M0 |= GPIOx->Pin;
  42   2              }
  43   1              if(GPIO == GPIO_P1)
  44   1              {
  45   2                      if(GPIOx->Mode == GPIO_PullUp)  P1M1 &= ~(GPIOx->Pin) ,  P1M0 &= ~(GPIOx->Pin);
  46   2                      if(GPIOx->Mode == GPIO_HighZ)   P1M1 |= GPIOx->Pin        ,  P1M0 &= ~(GPIOx->Pin);
  47   2                      if(GPIOx->Mode == GPIO_OUT_OD)  P1M1 |= GPIOx->Pin        ,  P1M0 |= GPIOx->Pin;
  48   2                      if(GPIOx->Mode == GPIO_OUT_PP)  P1M1 &= ~(GPIOx->Pin) ,  P1M0 |= GPIOx->Pin;
  49   2              }
  50   1              if(GPIO == GPIO_P2)
  51   1              {
  52   2                      if(GPIOx->Mode == GPIO_PullUp)  P2M1 &= ~(GPIOx->Pin) ,  P2M0 &= ~(GPIOx->Pin);
  53   2                      if(GPIOx->Mode == GPIO_HighZ)   P2M1 |= GPIOx->Pin        ,  P2M0 &= ~(GPIOx->Pin);
  54   2                      if(GPIOx->Mode == GPIO_OUT_OD)  P2M1 |= GPIOx->Pin        ,  P2M0 |= GPIOx->Pin;
C51 COMPILER V9.56.0.0   GPIO                                                              05/13/2022 23:20:03 PAGE 2   

  55   2                      if(GPIOx->Mode == GPIO_OUT_PP)  P2M1 &= ~(GPIOx->Pin) ,  P2M0 |= GPIOx->Pin;
  56   2              }
  57   1              if(GPIO == GPIO_P3)
  58   1              {
  59   2                      if(GPIOx->Mode == GPIO_PullUp)  P3M1 &= ~(GPIOx->Pin) ,  P3M0 &= ~(GPIOx->Pin);
  60   2                      if(GPIOx->Mode == GPIO_HighZ)   P3M1 |= GPIOx->Pin        ,  P3M0 &= ~(GPIOx->Pin);
  61   2                      if(GPIOx->Mode == GPIO_OUT_OD)  P3M1 |= GPIOx->Pin        ,  P3M0 |= GPIOx->Pin;
  62   2                      if(GPIOx->Mode == GPIO_OUT_PP)  P3M1 &= ~(GPIOx->Pin) ,  P3M0 |= GPIOx->Pin;
  63   2              }
  64   1              if(GPIO == GPIO_P4)
  65   1              {
  66   2                      if(GPIOx->Mode == GPIO_PullUp)  P4M1 &= ~(GPIOx->Pin) ,  P4M0 &= ~(GPIOx->Pin);
  67   2                      if(GPIOx->Mode == GPIO_HighZ)   P4M1 |= GPIOx->Pin        ,  P4M0 &= ~(GPIOx->Pin);
  68   2                      if(GPIOx->Mode == GPIO_OUT_OD)  P4M1 |= GPIOx->Pin        ,  P4M0 |= GPIOx->Pin;
  69   2                      if(GPIOx->Mode == GPIO_OUT_PP)  P4M1 &= ~(GPIOx->Pin) ,  P4M0 |= GPIOx->Pin;
  70   2              }
  71   1              if(GPIO == GPIO_P5)
  72   1              {
  73   2                      if(GPIOx->Mode == GPIO_PullUp)  P5M1 &= ~(GPIOx->Pin) ,  P5M0 &= ~(GPIOx->Pin);
  74   2                      if(GPIOx->Mode == GPIO_HighZ)   P5M1 |= GPIOx->Pin        ,  P5M0 &= ~(GPIOx->Pin);
  75   2                      if(GPIOx->Mode == GPIO_OUT_OD)  P5M1 |= GPIOx->Pin        ,  P5M0 |= GPIOx->Pin;
  76   2                      if(GPIOx->Mode == GPIO_OUT_PP)  P5M1 &= ~(GPIOx->Pin) ,  P5M0 |= GPIOx->Pin;
  77   2              }
  78   1              if(GPIO == GPIO_P6)
  79   1              {
  80   2                      if(GPIOx->Mode == GPIO_PullUp)  P6M1 &= ~(GPIOx->Pin) ,  P6M0 &= ~(GPIOx->Pin);
  81   2                      if(GPIOx->Mode == GPIO_HighZ)   P6M1 |= GPIOx->Pin        ,  P6M0 &= ~(GPIOx->Pin);
  82   2                      if(GPIOx->Mode == GPIO_OUT_OD)  P6M1 |= GPIOx->Pin        ,  P6M0 |= GPIOx->Pin;
  83   2                      if(GPIOx->Mode == GPIO_OUT_PP)  P6M1 &= ~(GPIOx->Pin) ,  P6M0 |= GPIOx->Pin;
  84   2              }
  85   1              if(GPIO == GPIO_P7)
  86   1              {
  87   2                      if(GPIOx->Mode == GPIO_PullUp)  P7M1 &= ~(GPIOx->Pin) ,  P7M0 &= ~(GPIOx->Pin);
  88   2                      if(GPIOx->Mode == GPIO_HighZ)   P7M1 |= GPIOx->Pin        ,  P7M0 &= ~(GPIOx->Pin);
  89   2                      if(GPIOx->Mode == GPIO_OUT_OD)  P7M1 |= GPIOx->Pin        ,  P7M0 |= GPIOx->Pin;
  90   2                      if(GPIOx->Mode == GPIO_OUT_PP)  P7M1 &= ~(GPIOx->Pin) ,  P7M0 |= GPIOx->Pin;
  91   2              }
  92   1              return 0;
  93   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    703    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
